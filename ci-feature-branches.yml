# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- feature/*
- v2-iasyncenum

variables:
  - group: Git-Push
  - name: BuildConfiguration
    value: Debug
  - name: MajorVersion
    value: '2'
  - name: MinorVersion
    value: '0'
  - name: PatchVersion
    value: '0'
  - name: ReleaseVersion
    value: $(MajorVersion).$(MinorVersion).$(PatchVersion)

name: $(MajorVersion).$(MinorVersion).$(PatchVersion)-ci$(Date:yyyyMMdd)$(Rev:rr)

stages:
- stage: BuildTestMirrorPackages
  displayName: 'Build, Test and Mirror Packages'
  jobs:
    - job: BuildTestPackages
      displayName: 'Build and Test Packages'

      pool:
        vmImage: 'windows-latest'

      steps:

      - task: DotNetCoreCLI@2
        displayName: 'Restore NuGet Packages'
        inputs:
          command: 'restore'
          feedsToUse: 'select'
          vstsFeed: '644f502f-3851-40c7-b691-0456e0bed428'
          verbosityRestore: 'Normal'

      - task: DotNetCoreCLI@2
        displayName: 'Build Projects'
        inputs:
          command: 'build'
          projects: '**/*.csproj'
          arguments: '-c $(BuildConfiguration) -p:AssemblyVersion=$(MajorVersion).$(MinorVersion).0.0 -p:FileVersion=$(MajorVersion).$(MinorVersion).0.0'

      - task: DotNetCoreCLI@2
        displayName: 'Run $(BuildConfiguration) Tests with Code Coverage'
        inputs:
          command: 'test'
          projects: '**/*.Tests.csproj'
          arguments: '-c $(BuildConfiguration) --collect "Code coverage" --filter TestCategory!=Integration'
          testRunTitle: 'ST/ORM Feature CI Tests - $(BuildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: 'Build Projects'
        inputs:
          command: 'build'
          projects: '**/*.csproj'
          arguments: '-c Release -p:AssemblyVersion=$(MajorVersion).$(MinorVersion).0.0 -p:FileVersion=$(MajorVersion).$(MinorVersion).0.0'

      - task: DotNetCoreCLI@2
        displayName: 'Run Release Tests with Code Coverage'
        inputs:
          command: 'test'
          projects: '**/*.Tests.csproj'
          arguments: '-c Release --collect "Code coverage" --filter TestCategory!=Integration'
          testRunTitle: 'ST/ORM Feature CI Tests - Release'

      - task: VSBuild@1
        displayName: 'VS Build'
        inputs:
          solution: '**\*.sqlproj'
          configuration: Release
