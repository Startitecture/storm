# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  - group: Git-Push
  - name: buildConfiguration
    value: 'Release'

stages:
- stage: BuildTestMirrorPackages
  displayName: 'Build, Test and Mirror Packages'
  jobs:
    - job: BuildTestPackages
      displayName: 'Build and Test Packages'

      pool:
        vmImage: 'windows-latest'

      steps:

      - task: NuGetInstaller@0
        displayName: 'Nuget Installer'

      - task: NuGetCommand@2
        inputs:
          command: 'restore'
          restoreSolution: '**/*.sln'
          feedsToUse: 'config'
          nugetConfigPath: 'nuget.config'
          externalFeedCredentials: 'Nuget.org'

      - task: VSBuild@1
        displayName: 'VS Build'
        inputs:
          solution: '**\*.sln'
          configuration: $(buildConfiguration)
          platform: 'any cpu'

      - task: VisualStudioTestPlatformInstaller@1
        displayName: 'Set up VS Test Platform'
        inputs:
          packageFeedSelector: 'nugetOrg'
          versionSelector: 'latestStable'

      - task: VSTest@2
        displayName: 'Run VS Tests'
        inputs:
          testSelector: 'testAssemblies'
          testAssemblyVer2: |
            **\*.Tests.dll
            !**\*TestAdapter.dll
            !**\obj\**
          searchFolder: '$(System.DefaultWorkingDirectory)'
          testFiltercriteria: 'TestCategory!="Integration"'
          codeCoverageEnabled: true
          runOnlyImpactedTests: true

      - task: PublishTestResults@2
        displayName: 'Publish Test Results Internal'
        inputs:
          testResultsFormat: 'VSTest'
          testResultsFiles: '**/TEST-*.xml'
          mergeTestResults: true
          testRunTitle: 'Storm-CI'

      - task: CopyFiles@2
        displayName: 'Copy Test Assemblies'
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: '**/*.Tests/bin/$(buildConfiguration)/**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/Tests'
          CleanTargetFolder: true

      - task: PublishPipelineArtifact@1
        displayName: 'Publish Test Assemblies'
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)/Tests'
          artifact: 'Tests'
          publishLocation: 'pipeline'

      - task: NuGetCommand@2
        displayName: 'Push NuGet Packages'
        inputs:
          command: 'push'
          packagesToPush: '$(System.DefaultWorkingDirectory)/**/*.nupkg;$(System.DefaultWorkingDirectory)/**/*.snupkg'
          nuGetFeedType: 'internal'
          publishVstsFeed: '644f502f-3851-40c7-b691-0456e0bed428'
          allowPackageConflicts: true

      - task: CopyFiles@2
        displayName: 'Copy NuGet Packages'
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: |
            **/*.nupkg
            **/*.snupkg
          TargetFolder: '$(Build.ArtifactStagingDirectory)/Packages'
          CleanTargetFolder: true
          flattenFolders: true

      - task: PublishBuildArtifacts@1
        displayName: 'Publish NuGet Package Build Artifacts'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/Packages'
          ArtifactName: 'NuGet Packages'
          publishLocation: 'Container'

      - task: DocFxTask@0
        displayName: 'Create DocFx documentation'
        inputs:
          solution: 'docs\docfx.json'

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)/docs/_site'
          artifact: 'DocFx Site'
          publishLocation: 'pipeline'

      - task: PublishPipelineArtifact@1
        displayName: 'Publish Test DACPAC'
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)/Startitecture.Orm.Testing.Schema/bin/$(buildConfiguration)/Startitecture.Orm.Testing.Schema.dacpac'
          artifact: 'Storm Test DACPAC'
          publishLocation: 'pipeline'

      - task: PublishPipelineArtifact@1
        displayName: 'Publish Database Publish Profile'
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)/Startitecture.Orm.Testing.Schema/Azure.publish.xml'
          artifact: 'Storm Test Publish Profile'
          publishLocation: pipeline

      - task: gitsync@1
        displayName: 'Sync Azure DevOps repository with GitHub'
        inputs:
          GitRepoUrl: 'https://%GitPat%@github.com/Startitecture/storm.git'
