# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:

- task: NuGetInstaller@0
  displayName: 'Nuget Installer'

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'config'
    nugetConfigPath: 'nuget.config'
    externalFeedCredentials: 'Nuget.org'

- task: VSBuild@1
  displayName: 'VS Build'
  inputs:
    solution: '**\*.sln'
    configuration: $(buildConfiguration)
    platform: 'any cpu'

- task: VisualStudioTestPlatformInstaller@1
  displayName: 'Set up VS Test Platform'
  inputs:
    packageFeedSelector: 'nugetOrg'
    versionSelector: 'latestStable'

- task: VSTest@2
  displayName: 'Run VS Tests'
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\*test*.dll
      !**\*TestAdapter.dll
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'
    testFiltercriteria: 'TestCategory!="Integration"'
    codeCoverageEnabled: true
    runOnlyImpactedTests: true

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '**/TEST-*.xml'
    mergeTestResults: true
    testRunTitle: 'Storm-CI'

- task: CopyFiles@2
  displayName: 'Copy Build Output'
  inputs:
    Contents: '**\*'
    TargetFolder: '$(build.artifactstagingdirectory)'
    CleanTargetFolder: true



- task: NuGetCommand@2
  displayName: 'Push NuGet Packages'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;$(Build.ArtifactStagingDirectory)/**/*.snupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '644f502f-3851-40c7-b691-0456e0bed428'
    allowPackageConflicts: true