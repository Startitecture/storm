// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Startitecture.Orm.Testing.Entities
{
    using Startitecture.Orm.Mapper;
    using Startitecture.Orm.Schema;

    /// <summary>
    /// The DomainIdentity entity POCO.
    /// </summary>
    [Table("DomainIdentity", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class DomainIdentityRow : TransactionItemBase
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DomainIdentityRow"/> class.
        /// </summary>
        public DomainIdentityRow()
        {
        }

        /// <summary>
        /// Gets or sets the DomainIdentityId (Primary key)
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"DomainIdentityId", Order = 1, TypeName = "int")]
        [Index(@"PK_DomainIdentity", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Domain identity ID")]
        public int DomainIdentityId { get; set; }

        /// <summary>
        /// Gets or sets the UniqueIdentifier (length: 254)
        /// </summary>
        [Column(@"UniqueIdentifier", Order = 2, TypeName = "nvarchar")]
        [Index(@"UK_DomainIdentity_UniqueIdentifier", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [MaxLength(254)]
        [StringLength(254)]
        [Display(Name = "Unique identifier")]
        public string UniqueIdentifier { get; set; }

        /// <summary>
        /// Gets or sets the FirstName (length: 50)
        /// </summary>
        [Column(@"FirstName", Order = 3, TypeName = "nvarchar")]
        [Required]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "First name")]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or sets the MiddleName (length: 50)
        /// </summary>
        [Column(@"MiddleName", Order = 4, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Middle name")]
        public string MiddleName { get; set; }

        /// <summary>
        /// Gets or sets the LastName (length: 50)
        /// </summary>
        [Column(@"LastName", Order = 5, TypeName = "nvarchar")]
        [Required]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Last name")]
        public string LastName { get; set; }
    }

}
// </auto-generated>
