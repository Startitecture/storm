// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Startitecture.Platform.Entities.Forms
{
    using Startitecture.Orm.Common;
    using System.Diagnostics.CodeAnalysis;

    /// <summary>
    /// The FormVersion entity POCO.
    /// </summary>
    [Table("FormVersion", Schema = "forms")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class FormVersionRow
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FormVersionRow"/> class.
        /// </summary>
        public FormVersionRow()
        {
        }

        /// <summary>
        /// Gets or sets the FormVersionId (Primary key)
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"FormVersionId", Order = 1, TypeName = "int")]
        [Index(@"PK_FormVersion", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Form version ID")]
        public int FormVersionId { get; set; }

        /// <summary>
        /// Gets or sets the FormId
        /// </summary>
        [Column(@"FormId", Order = 2, TypeName = "int")]
        [Required]
        [Display(Name = "Form ID")]
        public int FormId { get; set; }

        /// <summary>
        /// Gets or sets the Name (length: 50)
        /// </summary>
        [Column(@"Name", Order = 3, TypeName = "nvarchar")]
        [Required]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the Revision
        /// </summary>
        [Column(@"Revision", Order = 4, TypeName = "int")]
        [Required]
        [Display(Name = "Revision")]
        public int Revision { get; set; }

        /// <summary>
        /// Gets or sets the IsActive
        /// </summary>
        [Column(@"IsActive", Order = 5, TypeName = "bit")]
        [Required]
        [Display(Name = "Is active")]
        public bool IsActive { get; set; }

        // Foreign keys

        /// <summary>
        /// Gets or sets the Parent Form pointed by [FormVersion].([FormId]) (FK_FormVersion_Form)
        /// </summary>
        [ForeignKey("FormId")] public FormRow Form { get; set; } // FK_FormVersion_Form
    }

}
// </auto-generated>
