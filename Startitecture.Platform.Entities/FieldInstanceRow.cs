// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Startitecture.Platform.Entities.Forms
{
    using Startitecture.Orm.Common;
    using System.Diagnostics.CodeAnalysis;

    /// <summary>
    /// The FieldInstance entity POCO.
    /// </summary>
    [Table("FieldInstance", Schema = "forms")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class FieldInstanceRow
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FieldInstanceRow"/> class.
        /// </summary>
        public FieldInstanceRow()
        {
        }

        /// <summary>
        /// Gets or sets the FieldInstanceId (Primary key)
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"FieldInstanceId", Order = 1, TypeName = "int")]
        [Index(@"PK_FieldInstance", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Field instance ID")]
        public int FieldInstanceId { get; set; }

        /// <summary>
        /// Gets or sets the FieldId
        /// </summary>
        [Column(@"FieldId", Order = 2, TypeName = "int")]
        [Required]
        [Display(Name = "Field ID")]
        public int FieldId { get; set; }

        /// <summary>
        /// Gets or sets the DataSliceInstanceId
        /// </summary>
        [Column(@"DataSliceInstanceId", Order = 3, TypeName = "int")]
        [Required]
        [Display(Name = "Data slice instance ID")]
        public int DataSliceInstanceId { get; set; }

        // Foreign keys

        /// <summary>
        /// Gets or sets the Parent Field pointed by [FieldInstance].([FieldId]) (FK_FieldInstance_Field)
        /// </summary>
        [ForeignKey("FieldId")] public FieldRow Field { get; set; } // FK_FieldInstance_Field
    }

}
// </auto-generated>
